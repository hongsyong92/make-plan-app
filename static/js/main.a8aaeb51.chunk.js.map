{"version":3,"sources":["theme.ts","atoms.ts","Components/ToDoItem.tsx","Components/ToDoDetail.tsx","routes/Home.tsx","routes/Login.tsx","routes/UserMenu.tsx","Components/Calendar.tsx","routes/CalendarScreen.tsx","Components/AddToDo.tsx","Components/BottomNav.tsx","Components/Router.tsx","App.tsx","index.tsx"],"names":["theme","bgColor","textColor","baseColor","modalColor","accentColor","subTextColor","borderColor","toDoState","atom","key","default","loginState","ToDoItem","text","category","onClick","Container","StatusLine","ToDoContents","MoreBtn","className","console","log","size","React","memo","styled","motion","div","props","button","pageVariants","initial","opacity","scale","visible","y","bottom","exit","ToDoDetail","item","navigate","useNavigate","variants","animate","DetailHeader","id","Home","now","dayjs","params","useParams","location","useLocation","useState","selectedId","setSelectedId","toDoDetailMatch","pathname","includes","toDos","useRecoilValue","clickedToDo","find","Number","AnimatePresence","x","transition","type","TextHeader","to","format","ListBoard","BoardTitle","List","length","map","layoutId","toDoId","Overlay","Login","useRecoilState","isLogin","setLogin","handleLogin","useEffect","LoginContainer","UserMenu","useSetRecoilState","Calendar","require","weekday","isoWeek","weekOfYear","extend","today","viewDate","setViewDate","selectDate","setSelectDate","changegeMonth","date","changeString","add","subtract","startWeek","startOf","week","endWeek","endOf","calendar","push","Array","fill","n","i","current","isSelected","isToday","isNone","createCalendar","CalendarScreen","AddToDo","addOpen","onClose","setToDos","useForm","register","handleSubmit","setValue","onSubmit","toDo","oldToDos","Date","required","minLength","placeholder","BottomNav","setAddOpen","Router","index","element","path","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a8aaeb51.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#000\",\n  textColor: \"#F7F8F9\",\n  baseColor: \"#171B1C\",\n  modalColor: \"#1E2427\",\n  accentColor: \"#212635\",\n  subTextColor: \"#C5C8CE\",\n  borderColor: \"#41474C\",\n};\n","import { atom } from \"recoil\";\n\n// interface IForm {\n//   toDo: string;\n// }\nexport interface IToDo {\n  text: string;\n  id?: number;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n  onClick?: () => void;\n  layoutId?: number;\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const loginState = atom<boolean>({\n  key: \"isLogin\",\n  default: true,\n});\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { AiOutlineMore } from \"react-icons/ai\";\nimport React from \"react\";\nimport { IToDo } from \"../atoms\";\nimport { motion } from \"framer-motion\";\n\nfunction ToDoItem({ text, category, onClick }: IToDo) {\n  return (\n    <Container onClick={onClick}>\n      <StatusLine category={category} />\n      <ToDoContents>\n        <p>{text}</p>\n      </ToDoContents>\n      <MoreBtn\n        className=\"more_btn\"\n        onClick={() => console.log(\"more btn click\")}\n      >\n        <AiOutlineMore size=\"24\" />\n      </MoreBtn>\n    </Container>\n  );\n}\nexport default React.memo(ToDoItem);\n\nconst Container = styled(motion.div)`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: 100px;\n  cursor: pointer;\n  border-radius: 24px;\n  background-color: ${theme.baseColor};\n  margin-bottom: 15px;\n  padding: 15px 0 15px 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  > p {\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst StatusLine = styled.div<{ category: string }>`\n  width: 3px;\n  height: calc(100% - 15px);\n  background-color: ${(props) =>\n    props.category === \"TO_DO\" ? \"blue\" : \"DOING\" ? \"gold\" : \"green\"};\n`;\n\nconst ToDoContents = styled.div`\n  width: 100%;\n  padding-left: 15px;\n`;\n\nconst MoreBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { useNavigate } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\ninterface IToDoDetail {\n  item: any;\n}\n\nconst pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0,\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    y: \"50%\",\n    bottom: \"50%\",\n  },\n  exit: {\n    opacity: 0,\n    scale: 0,\n  },\n};\n\nfunction ToDoDetail({ item }: IToDoDetail) {\n  const navigate = useNavigate();\n\n  return (\n    <Container\n      variants={pageVariants}\n      initial=\"initial\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      <DetailHeader>\n        <button className=\"close_btn\" onClick={() => navigate(\"/\")}>\n          <RiCloseFill size=\"24\" />\n        </button>\n      </DetailHeader>\n      <div className=\"created\">{item.id}</div>\n      <div className=\"todo_content\">{item.text}</div>\n      <div className=\"todo_btns\">\n        <button>진행중</button>\n        <button>완료</button>\n        <button>수정</button>\n        <button>삭제</button>\n        <button>완료</button>\n      </div>\n    </Container>\n  );\n}\n\nexport default ToDoDetail;\n\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  width: 100%;\n  height: 70%;\n  background-color: ${theme.modalColor};\n  border-radius: 20px;\n  overflow-x: hidden;\n  padding: 30px 20px;\n  z-index: 2;\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport dayjs from \"dayjs\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport ToDoItem from \"../Components/ToDoItem\";\nimport ToDoDetail from \"../Components/ToDoDetail\";\nimport { useRecoilValue } from \"recoil\";\nimport { toDoState } from \"../atoms\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\nfunction Home() {\n  let now = dayjs();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n\n  const [selectedId, setSelectedId] = useState<number | undefined>();\n  const toDoDetailMatch = location.pathname.includes(`/todos/`);\n  const onToDoClick = (toDoId: number | undefined) => {\n    navigate(`/todos/${toDoId}`);\n  };\n\n  const toDos = useRecoilValue(toDoState);\n\n  const clickedToDo =\n    params.id && toDos.find((item) => item.id === Number(params.id));\n\n  const pageVariants = {\n    initial: {\n      x: -500,\n      transition: { type: \"tween\" },\n    },\n    visible: {\n      x: 0,\n      transition: { type: \"tween\" },\n    },\n    exit: {\n      x: 500,\n      transition: { type: \"tween\" },\n    },\n  };\n\n  return (\n    <AnimatePresence>\n      <Container\n        initial=\"initial\"\n        animate=\"visible\"\n        exit=\"exit\"\n        variants={pageVariants}\n      >\n        <TextHeader>\n          <p>TODAY</p>\n          <Link to=\"/select-date\">\n            <span>{now.format(\"YYYY.MM.DD\")} &nbsp;&nbsp;📅</span>\n          </Link>\n        </TextHeader>\n\n        <ListBoard>\n          <BoardTitle>TO DO LIST</BoardTitle>\n\n          <List>\n            {toDos?.length > 0 ? (\n              <>\n                {toDos?.map((item) => (\n                  <ToDoItem\n                    layoutId={item.id}\n                    key={item.id}\n                    id={item.id}\n                    text={item.text}\n                    category={item.category}\n                    onClick={() => {\n                      onToDoClick(item.id);\n                      setSelectedId(item.id);\n                    }}\n                  />\n                ))}\n              </>\n            ) : (\n              <p>아직 등록된 할 일이 없습니다.</p>\n            )}\n          </List>\n        </ListBoard>\n        {clickedToDo && selectedId && toDoDetailMatch ? (\n          <>\n            <Overlay onClick={() => navigate(\"/\")} />\n            <ToDoDetail item={clickedToDo} />\n          </>\n        ) : null}\n      </Container>\n    </AnimatePresence>\n  );\n}\nexport default Home;\n\nconst Container = styled(motion.div)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst TextHeader = styled.div`\n  position: relative;\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n\nconst ListBoard = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst List = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 30px;\n`;\n\nconst BoardTitle = styled.div`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: calc(100% + 55px);\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 1;\n  z-index: 1;\n`;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { loginState } from \"../atoms\";\nimport { theme } from \"../theme\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [isLogin, setLogin] = useRecoilState(loginState);\n\n  const handleLogin = () => {\n    setLogin(true);\n  };\n\n  useEffect(() => {\n    if (isLogin) {\n      navigate(\"/\");\n    }\n  }, [isLogin, navigate]);\n  return (\n    <Container>\n      <TextHeader>\n        <p>Login</p>\n      </TextHeader>\n      <LoginContainer>\n        <button onClick={handleLogin} className=\"social_login_btn google\">\n          google\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn facebook\">\n          facebook\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn naver\">\n          naver\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn kakao\">\n          kakao\n        </button>\n      </LoginContainer>\n    </Container>\n  );\n}\nexport default Login;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n\nconst TextHeader = styled.div`\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  .social_login_btn {\n    width: 300px;\n    height: 48px;\n    border-radius: 8px;\n    margin-bottom: 10px;\n    color: #111;\n  }\n  .social_login_btn.google {\n    background-color: #f4f4f4;\n  }\n  .social_login_btn.facebook {\n    background-color: #4866e4;\n  }\n  .social_login_btn.naver {\n    background-color: #1bb71f;\n  }\n  .social_login_btn.kakao {\n    background-color: #fae300;\n  }\n`;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { loginState } from \"../atoms\";\nimport { theme } from \"../theme\";\n\nconst pageVariants = {\n  initial: {\n    x: 500,\n    transition: { type: \"tween\" },\n  },\n  visible: {\n    x: 0,\n    transition: { type: \"tween\" },\n  },\n  exit: {\n    x: -500,\n    transition: { type: \"tween\" },\n  },\n};\n\nfunction UserMenu() {\n  const setLogin = useSetRecoilState(loginState);\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    navigate(\"/login\");\n    setLogin(false);\n  };\n  return (\n    <AnimatePresence>\n      <Container\n        variants={pageVariants}\n        initial=\"initial\"\n        animate=\"visible\"\n        exit=\"exit\"\n      >\n        <TextHeader>\n          <p>user 님의 메뉴</p>\n          <button onClick={handleLogout}>로그아웃</button>\n        </TextHeader>\n      </Container>\n    </AnimatePresence>\n  );\n}\nexport default UserMenu;\n\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n\nconst TextHeader = styled.div`\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../theme\";\n\nfunction Calendar() {\n  //day\n  const dayjs = require(\"dayjs\");\n  const weekday = require(\"dayjs/plugin/weekday\");\n  const isoWeek = require(\"dayjs/plugin/isoWeek\");\n  const weekOfYear = require(\"dayjs/plugin/weekOfYear\");\n\n  // day extend\n  dayjs.extend(weekday);\n  dayjs.extend(isoWeek);\n  dayjs.extend(weekOfYear);\n\n  const today = dayjs();\n  const [viewDate, setViewDate] = useState(dayjs());\n  const [selectDate, setSelectDate] = useState(dayjs());\n\n  const createCalendar = () => {\n    const startWeek = viewDate.startOf(\"month\").week();\n    const endWeek =\n      viewDate.endOf(\"month\").week() === 1\n        ? 53\n        : viewDate.endOf(\"month\").week();\n    let calendar = [];\n\n    for (let week = startWeek; week <= endWeek; week++) {\n      calendar.push(\n        <div className=\"row\" key={week}>\n          {Array(7)\n            .fill(0)\n            .map((n, i) => {\n              let current = viewDate\n                .startOf(\"week\")\n                .week(week)\n                .add(n + i, \"day\");\n              if (viewDate.format(\"MM\") === \"12\") {\n                current = viewDate\n                  .startOf(\"week\")\n                  .week(week - 52)\n                  .add(n + i, \"day\");\n              }\n              // 현재 날짜 (기준)\n              let isSelected =\n                selectDate.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                  ? \"selected\"\n                  : \"\";\n              let isToday =\n                today.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                  ? \"today\"\n                  : \"\";\n              let isNone =\n                current.format(\"MM\") === viewDate.format(\"MM\") ? \"\" : \"none\";\n              return (\n                <div className=\"box\" key={`${week}_${i}`}>\n                  <div\n                    className={`text ${isSelected} ${isToday} ${isNone}`}\n                    onClick={() => {\n                      setSelectDate(current);\n                    }}\n                  >\n                    <span className={`day`}>{current.format(\"D\")}</span>\n                    {isToday ? (\n                      <span className=\"isToday\">오늘</span>\n                    ) : isSelected ? (\n                      <span className=\"isSelected\"></span>\n                    ) : null}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n    return calendar;\n  };\n\n  const changegeMonth = (date: any, changeString: string) => {\n    switch (changeString) {\n      case \"add\":\n        return setViewDate(viewDate.add(1, \"month\"));\n      case \"subtract\":\n        return setViewDate(viewDate.subtract(1, \"month\"));\n      default:\n        return date;\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"calendar_header\">\n        <button\n          className=\"previous_icon\"\n          onClick={() => changegeMonth(viewDate, \"subtract\")}\n        >\n          이전달\n        </button>\n        <span className=\"thisMonth\">{viewDate.format(\"MM\")}월</span>\n        <button\n          className=\"next_icon\"\n          onClick={() => changegeMonth(viewDate, \"add\")}\n        >\n          다음달\n        </button>\n      </div>\n      <div className=\"calendar_body\">\n        <div className=\"row week\">\n          <div className=\"box\">\n            <span className=\"text\">일</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">월</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">화</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">수</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">목</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">금</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">토</span>\n          </div>\n        </div>\n        <div>{createCalendar()}</div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Calendar;\n\nconst Container = styled.div`\n  width: 100%;\n  .calendar_header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  .calendar_body {\n    text-align: center;\n    .row {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n      width: 100%;\n    }\n    .row.week {\n      height: 18px;\n      border-bottom: 1px solid #e8e8e8;\n    }\n    .box {\n      width: 32px;\n      height: 32px;\n      margin: 6px 6px;\n      font-size: 14px;\n    }\n    .text {\n      position: static;\n      width: 32px;\n      height: 32px;\n      color: ${theme.textColor};\n    }\n    .holiday,\n    .grayed {\n      color: #484848;\n      pointer-events: none;\n    }\n    .day {\n      position: relative;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 32px;\n      height: 32px;\n    }\n    .selected {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background: pink;\n      font-weight: 700;\n      color: #fff;\n    }\n    .today {\n      border-radius: 50%;\n      font-weight: 500;\n      /* color: pink; */\n      background: pink;\n    }\n    .isSelected {\n      position: relative;\n      color: pink;\n      font-size: 10px;\n      font-weight: 400;\n    }\n    .isToday {\n      position: relative;\n      color: ${theme.textColor};\n      font-size: 10px;\n      font-weight: 400;\n    }\n    .none {\n      display: none;\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport Calendar from \"../Components/Calendar\";\nimport { theme } from \"../theme\";\n\nfunction CalendarScreen() {\n  return (\n    <Container>\n      <Calendar />\n    </Container>\n  );\n}\n\nexport default CalendarScreen;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { BiPencil } from \"react-icons/bi\";\n// import { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { toDoState } from \"../atoms\";\nimport { useSetRecoilState } from \"recoil\";\nimport { motion } from \"framer-motion\";\n\ninterface IAddToDoModal {\n  addOpen: boolean;\n  onClose: () => void;\n}\ninterface IForm {\n  toDo: string;\n}\n\nconst pageVariants = {\n  initial: {\n    opacity: 0,\n    y: 1000,\n    transition: { type: \"tween\" },\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { type: \"tween\" },\n  },\n  exit: {\n    opacity: 0,\n    y: 1000,\n    transition: { type: \"tween\" },\n  },\n};\n\nfunction AddToDo({ addOpen, onClose }: IAddToDoModal) {\n  // const navigate = useNavigate();\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, category: \"TO_DO\", id: Date.now() },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n    onClose();\n  };\n\n  return (\n    <Container\n      addOpen={addOpen}\n      variants={pageVariants}\n      initial=\"initial\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      <DetailHeader>\n        <button className=\"close_btn\" onClick={() => onClose()}>\n          <RiCloseFill size=\"24\" />\n        </button>\n      </DetailHeader>\n\n      <form onSubmit={handleSubmit(handleValid)}>\n        <input\n          {...register(\"toDo\", {\n            required: \"필수 입력 항목입니다.\",\n            minLength: 2,\n          })}\n          placeholder=\"할 일을 입력하세요\"\n        />\n        <button className=\"add_todo_btn\">\n          <BiPencil size=\"16\" />\n          <span>등록하기</span>\n        </button>\n      </form>\n    </Container>\n  );\n}\nexport default AddToDo;\n\nconst Container = styled(motion.div)<{ addOpen: boolean }>`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  left: 0;\n  bottom: 55px;\n  width: 100%;\n  height: 70%;\n  padding: 30px 20px;\n  overflow-x: hidden;\n  border-radius: 20px 20px 0 0;\n  background-color: ${theme.modalColor};\n  z-index: 2;\n  form {\n    padding-top: 30px;\n    display: flex;\n    > input {\n      width: calc(100% - 110px);\n      height: 47px;\n      margin: 0 auto;\n      border: 0;\n      outline: 0;\n      background-color: transparent;\n      border-bottom: 1px solid ${theme.textColor};\n      color: ${theme.textColor};\n      font-size: 18px;\n      margin-bottom: 20px;\n    }\n    .add_todo_btn {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100px;\n      height: 47px;\n      border-radius: 8px;\n      background-color: #577af8;\n      cursor: pointer;\n      > span {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from \"styled-components\";\nimport { BsListCheck } from \"react-icons/bs\";\nimport { RiAddCircleLine } from \"react-icons/ri\";\nimport { BiUser } from \"react-icons/bi\";\nimport { theme } from \"../theme\";\nimport { Link } from \"react-router-dom\";\nimport AddToDo from \"./AddToDo\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"../atoms\";\nimport { AnimatePresence } from \"framer-motion\";\n\nfunction BottomNav() {\n  const [addOpen, setAddOpen] = useState(false);\n  const isLogin = useRecoilValue(loginState);\n  const handleAddClick = () => {\n    if (isLogin) {\n      setAddOpen(true);\n    } else {\n      console.log(\"not loggged in\");\n    }\n  };\n  const onClose = () => {\n    setAddOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <div className=\"menu_item\">\n          <button>\n            <Link to=\"/\">\n              <BsListCheck size=\"22\" />\n            </Link>\n          </button>\n        </div>\n        <div className=\"menu_item\">\n          <button onClick={handleAddClick}>\n            <RiAddCircleLine size=\"22\" />\n          </button>\n        </div>\n        <div className=\"menu_item\">\n          <button>\n            <Link to=\"/user-menu\">\n              <BiUser size=\"22\" />\n            </Link>\n          </button>\n        </div>\n      </Container>\n      <AnimatePresence>\n        {addOpen ? (\n          <>\n            <Overlay onClick={onClose} />\n            <AddToDo addOpen={addOpen} onClose={onClose} />\n          </>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default BottomNav;\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 500px;\n  width: 100%;\n  height: 55px;\n  border-top: 1px solid ${theme.borderColor};\n  background-color: ${theme.baseColor};\n  .menu_item {\n    position: relative;\n    width: 54px;\n    height: 100%;\n    > button {\n      width: 100%;\n      height: 100%;\n      > a {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: calc(100% + 55px);\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 1;\n  z-index: 1;\n`;\n","import { Routes, Route } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"../atoms\";\nimport Home from \"../routes/Home\";\nimport Login from \"../routes/Login\";\nimport UserMenu from \"../routes/UserMenu\";\nimport CalendarScreen from \"../routes/CalendarScreen\";\nimport BottomNav from \"../Components/BottomNav\";\n\nfunction Router() {\n  const isLogin = useRecoilValue(loginState);\n\n  return (\n    <>\n      <Routes>\n        <Route index element={isLogin ? <Home /> : <Login />} />\n        <Route path=\"/todos/:id\" element={<Home />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/select-date\" element={<CalendarScreen />} />\n        {/* user menu 화면 */}\n        <Route path=\"/user-menu\" element={isLogin ? <UserMenu /> : <Login />} />\n      </Routes>\n      <BottomNav />\n    </>\n  );\n}\n\nexport default Router;\n","import \"./assets/fonts/pretendard.css\";\nimport styled from \"styled-components\";\nimport Router from \"./Components/Router\";\nimport Login from \"./routes/Login\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"./atoms\";\nimport { theme } from \"./theme\";\n\nfunction App() {\n  const isLogin = useRecoilValue(loginState);\n\n  return <Container>{!isLogin ? <Login /> : <Router />}</Container>;\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: relative;\n  width: 428px;\n  height: 926px;\n  max-width: 428px;\n  max-height: 926px;\n  margin: 0 auto;\n  border-radius: 20px;\n  overflow: hidden;\n  background-color: ${theme.bgColor};\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { RecoilRoot } from \"recoil\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\nhtml {\n  height: 100%;\n}\n*[hidden] {\n  display: none;\n}\nbody {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  font-family: 'Pretendard', sans-serif;\n  background-color: ${(props) => props.theme.modalColor};\n  color: ${(props) => props.theme.textColor};\n  overflow: hidden;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\nbutton {\n  display: block;\n  border: 0;\n  cursor: pointer;\n  color: inherit;\n  background-color: inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <HelmetProvider>\n          <Helmet>\n            <title>PRESENT PROGRESSIVE</title>\n          </Helmet>\n          <GlobalStyle />\n          <BrowserRouter basename=\"/present-progress-app\">\n            <App />\n          </BrowserRouter>\n        </HelmetProvider>\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}