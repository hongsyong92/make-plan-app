{"version":3,"sources":["theme.ts","routes/UserMenu.tsx","toDoMockData.ts","Components/ToDoItem.tsx","Components/ToDoDetail.tsx","atoms.ts","routes/Home.tsx","Components/AddToDo.tsx","Components/BottomNav.tsx","Components/Calendar.tsx","routes/CalendarScreen.tsx","routes/Login.tsx","App.tsx","index.tsx"],"names":["theme","bgColor","textColor","baseColor","modalColor","accentColor","subTextColor","borderColor","UserMenu","Container","TextHeader","styled","div","ToDoMockData","id","status","content","createdAt","ToDoItem","item","onClick","console","log","StatusLine","ToDoContents","text","MoreBtn","className","size","React","memo","button","ToDoDetail","navigate","useNavigate","DetailHeader","toDoState","atom","key","default","loginState","Home","now","dayjs","params","useParams","clickedToDo","find","Number","toDos","useRecoilValue","to","format","ListBoard","BoardTitle","List","length","map","toDoId","Overlay","props","AddToDo","addOpen","onClose","useRecoilState","setToDos","useForm","register","handleSubmit","setValue","onSubmit","toDo","oldToDos","category","Date","required","minLength","placeholder","BottomNav","useState","setAddOpen","isLogin","Calendar","require","weekday","isoWeek","weekOfYear","extend","today","viewDate","setViewDate","selectDate","setSelectDate","changegeMonth","date","changeString","add","subtract","startWeek","startOf","week","endWeek","endOf","calendar","push","Array","fill","n","i","current","isSelected","isToday","isNone","createCalendar","CalendarScreen","Login","handleLogin","LoginContainer","App","setLogin","basename","process","index","element","path","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd13f80b.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#000\",\n  textColor: \"#F7F8F9\",\n  baseColor: \"#171B1C\",\n  modalColor: \"#1E2427\",\n  accentColor: \"#212635\",\n  subTextColor: \"#C5C8CE\",\n  borderColor: \"#41474C\",\n};\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\n\nfunction UserMenu() {\n  return (\n    <Container>\n      <TextHeader>\n        <p>user 님의 메뉴</p>\n      </TextHeader>\n    </Container>\n  );\n}\nexport default UserMenu;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n\nconst TextHeader = styled.div`\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n","export const ToDoMockData = [\n  {\n    id: 1,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 2,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 3,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 4,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 5,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 6,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 7,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 8,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 9,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n  {\n    id: 10,\n    status: \"TO_DO\",\n    content: \"어쩌구 저쩌구 fake data\",\n    createdAt: \"2022-01-13 15:33\",\n  },\n];\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { AiOutlineMore } from \"react-icons/ai\";\nimport React from \"react\";\n\ninterface IToDoItem {\n  item: any;\n  onClick: () => void;\n}\n\nfunction ToDoItem({ item, onClick }: IToDoItem) {\n  console.log(item);\n  return (\n    <Container onClick={onClick}>\n      <StatusLine />\n      <ToDoContents>\n        <p>{item.text}</p>\n      </ToDoContents>\n      <MoreBtn\n        className=\"more_btn\"\n        onClick={() => console.log(\"more btn click\")}\n      >\n        <AiOutlineMore size=\"24\" />\n      </MoreBtn>\n    </Container>\n  );\n}\nexport default React.memo(ToDoItem);\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: 100px;\n  cursor: pointer;\n  border-radius: 24px;\n  background-color: ${theme.baseColor};\n  margin-bottom: 15px;\n  padding: 15px 0 15px 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  > p {\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\n\nconst StatusLine = styled.div`\n  width: 2px;\n  height: calc(100% - 15px);\n  background-color: gold;\n`;\n\nconst ToDoContents = styled.div`\n  width: 100%;\n  padding-left: 15px;\n`;\n\nconst MoreBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface IToDoDetail {\n  item: any;\n}\n\nfunction ToDoDetail({ item }: IToDoDetail) {\n  const navigate = useNavigate();\n\n  return (\n    <Container>\n      <DetailHeader>\n        <button className=\"close_btn\" onClick={() => navigate(\"/\")}>\n          <RiCloseFill size=\"24\" />\n        </button>\n      </DetailHeader>\n      <div className=\"created\">{item.createdAt}</div>\n      <div className=\"todo_content\">{item.text}</div>\n    </Container>\n  );\n}\n\nexport default ToDoDetail;\n\nconst Container = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 70%;\n  background-color: ${theme.modalColor};\n  border-radius: 20px 20px 0 0;\n  overflow-x: hidden;\n  padding: 30px 20px;\n  z-index: 2;\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import { atom } from \"recoil\";\n\ninterface IForm {\n  toDo: string;\n}\ninterface IToDo {\n  text: string;\n  id: number;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const loginState = atom<boolean>({\n  key: \"isLogin\",\n  default: false,\n});\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport dayjs from \"dayjs\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { ToDoMockData } from \"../toDoMockData\";\nimport ToDoItem from \"../Components/ToDoItem\";\nimport ToDoDetail from \"../Components/ToDoDetail\";\nimport { useRecoilValue } from \"recoil\";\nimport { toDoState } from \"../atoms\";\n\nfunction Home() {\n  let now = dayjs();\n  const percentage = 1;\n  const navigate = useNavigate();\n  const params = useParams();\n  // const location = useLocation();\n  // const addToDoMatch = location.pathname.includes(\"/add-todos\");\n  const onToDoClick = (toDoId: number) => {\n    navigate(`/todos/${toDoId}`);\n  };\n  const clickedToDo =\n    params.id && ToDoMockData.find((item) => item.id === Number(params.id));\n\n  const toDos = useRecoilValue(toDoState);\n\n  return (\n    <Container>\n      <TextHeader>\n        <p>TODAY</p>\n        <Link to=\"/select-date\">\n          <span>{now.format(\"YYYY.MM.DD\")} &nbsp;&nbsp;📅</span>\n        </Link>\n      </TextHeader>\n      {/* <ProgressBox>\n        <CircularProgressbar value={percentage} text={`${percentage}%`} />\n      </ProgressBox> */}\n      <ListBoard>\n        <BoardTitle>TO DO LIST</BoardTitle>\n        <List>\n          {toDos?.length > 0 ? (\n            <>\n              {toDos?.map((item) => (\n                <ToDoItem\n                  key={item.id}\n                  item={item}\n                  onClick={() => onToDoClick(item.id)}\n                />\n              ))}\n            </>\n          ) : (\n            <p>아직 등록된 할 일이 없습니다.</p>\n          )}\n        </List>\n      </ListBoard>\n      {clickedToDo ? (\n        <>\n          <Overlay onClick={() => navigate(\"/\")} />\n          <ToDoDetail item={clickedToDo} />\n        </>\n      ) : null}\n      {/* {addToDoMatch ? (\n        <>\n          <Overlay onClick={() => navigate(\"/\")} />\n          <AddToDo />\n        </>\n      ) : null} */}\n    </Container>\n  );\n}\nexport default Home;\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst TextHeader = styled.div`\n  position: relative;\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n\nconst ProgressBox = styled.div`\n  position: relative;\n  width: 150px;\n  margin-bottom: 20px;\n  .CircularProgressbar-path {\n    stroke: gold;\n  }\n  .CircularProgressbar-trail {\n    stroke: ${theme.modalColor};\n  }\n  .CircularProgressbar-text {\n    fill: gold;\n  }\n  .CircularProgressbar-background {\n    fill: green;\n  }\n`;\n\nconst ListBoard = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  background-color: ${(props) => props.theme.bgColor};\n`;\n\nconst List = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 30px;\n`;\n\nconst BoardTitle = styled.div`\n  margin-bottom: 30px;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: calc(100% + 55px);\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 1;\n  z-index: 1;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { BiPencil } from \"react-icons/bi\";\n// import { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { toDoState } from \"../atoms\";\nimport { useRecoilState } from \"recoil\";\n\ninterface IAddToDoModal {\n  addOpen: boolean;\n  onClose: () => void;\n}\ninterface IForm {\n  toDo: string;\n}\n\nfunction AddToDo({ addOpen, onClose }: IAddToDoModal) {\n  // const navigate = useNavigate();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, category: \"TO_DO\", id: Date.now() },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n    onClose();\n  };\n\n  return (\n    <Container addOpen={addOpen}>\n      <DetailHeader>\n        <button className=\"close_btn\" onClick={() => onClose()}>\n          <RiCloseFill size=\"24\" />\n        </button>\n      </DetailHeader>\n\n      <form onSubmit={handleSubmit(handleValid)}>\n        <input\n          {...register(\"toDo\", {\n            required: \"필수 입력 항목입니다.\",\n            minLength: 2,\n          })}\n          placeholder=\"할 일을 입력하세요\"\n        />\n        <button className=\"add_todo_btn\">\n          <BiPencil size=\"16\" />\n          <span>등록하기</span>\n        </button>\n      </form>\n    </Container>\n  );\n}\nexport default AddToDo;\n\nconst Container = styled.div<{ addOpen: boolean }>`\n  display: ${(props) => (props.addOpen ? \"flex\" : \"none\")};\n  flex-direction: column;\n  position: absolute;\n  left: 0;\n  bottom: 55px;\n  width: 100%;\n  height: 70%;\n  padding: 30px 20px;\n  overflow-x: hidden;\n  background-color: ${theme.modalColor};\n  z-index: 2;\n  form {\n    .add_todo_btn {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100px;\n      height: 47px;\n      border-radius: 8px;\n      background-color: #577af8;\n      cursor: pointer;\n      > span {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n\nconst DetailHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from \"styled-components\";\nimport { BsListCheck } from \"react-icons/bs\";\nimport { RiAddCircleLine } from \"react-icons/ri\";\nimport { BiUser } from \"react-icons/bi\";\nimport { theme } from \"../theme\";\nimport { Link } from \"react-router-dom\";\nimport AddToDo from \"./AddToDo\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginState } from \"../atoms\";\n\nfunction BottomNav() {\n  const [addOpen, setAddOpen] = useState(false);\n  const isLogin = useRecoilValue(loginState);\n  const handleAddClick = () => {\n    if (isLogin) {\n      setAddOpen(true);\n    } else {\n      console.log(\"not loggged in\");\n    }\n  };\n  const onClose = () => {\n    setAddOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <div className=\"menu_item\">\n          <button>\n            <Link to=\"/\">\n              <BsListCheck size=\"22\" />\n            </Link>\n          </button>\n        </div>\n        <div className=\"menu_item\">\n          <button onClick={handleAddClick}>\n            <RiAddCircleLine size=\"22\" />\n          </button>\n        </div>\n        <div className=\"menu_item\">\n          <button>\n            <Link to=\"/user-menu\">\n              <BiUser size=\"22\" />\n            </Link>\n          </button>\n        </div>\n      </Container>\n      <AddToDo addOpen={addOpen} onClose={onClose} />\n    </>\n  );\n}\n\nexport default BottomNav;\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 500px;\n  width: 100%;\n  height: 55px;\n  border-top: 1px solid ${theme.borderColor};\n  background-color: ${theme.baseColor};\n  .menu_item {\n    position: relative;\n    width: 54px;\n    height: 100%;\n    > button {\n      width: 100%;\n      height: 100%;\n      > a {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../theme\";\n\nfunction Calendar() {\n  //day\n  const dayjs = require(\"dayjs\");\n  const weekday = require(\"dayjs/plugin/weekday\");\n  const isoWeek = require(\"dayjs/plugin/isoWeek\");\n  const weekOfYear = require(\"dayjs/plugin/weekOfYear\");\n\n  // day extend\n  dayjs.extend(weekday);\n  dayjs.extend(isoWeek);\n  dayjs.extend(weekOfYear);\n\n  const today = dayjs();\n  const [viewDate, setViewDate] = useState(dayjs());\n  const [selectDate, setSelectDate] = useState(dayjs());\n\n  const createCalendar = () => {\n    const startWeek = viewDate.startOf(\"month\").week();\n    const endWeek =\n      viewDate.endOf(\"month\").week() === 1\n        ? 53\n        : viewDate.endOf(\"month\").week();\n    let calendar = [];\n\n    for (let week = startWeek; week <= endWeek; week++) {\n      calendar.push(\n        <div className=\"row\" key={week}>\n          {Array(7)\n            .fill(0)\n            .map((n, i) => {\n              let current = viewDate\n                .startOf(\"week\")\n                .week(week)\n                .add(n + i, \"day\");\n              if (viewDate.format(\"MM\") === \"12\") {\n                current = viewDate\n                  .startOf(\"week\")\n                  .week(week - 52)\n                  .add(n + i, \"day\");\n              }\n              // 현재 날짜 (기준)\n              let isSelected =\n                selectDate.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                  ? \"selected\"\n                  : \"\";\n              let isToday =\n                today.format(\"YYYYMMDD\") === current.format(\"YYYYMMDD\")\n                  ? \"today\"\n                  : \"\";\n              let isNone =\n                current.format(\"MM\") === viewDate.format(\"MM\") ? \"\" : \"none\";\n              return (\n                <div className=\"box\" key={`${week}_${i}`}>\n                  <div\n                    className={`text ${isSelected} ${isToday} ${isNone}`}\n                    onClick={() => {\n                      setSelectDate(current);\n                    }}\n                  >\n                    <span className={`day`}>{current.format(\"D\")}</span>\n                    {isToday ? (\n                      <span className=\"isToday\">오늘</span>\n                    ) : isSelected ? (\n                      <span className=\"isSelected\"></span>\n                    ) : null}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n    return calendar;\n  };\n\n  const changegeMonth = (date: any, changeString: string) => {\n    switch (changeString) {\n      case \"add\":\n        return setViewDate(viewDate.add(1, \"month\"));\n      case \"subtract\":\n        return setViewDate(viewDate.subtract(1, \"month\"));\n      default:\n        return date;\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"calendar_header\">\n        <button\n          className=\"previous_icon\"\n          onClick={() => changegeMonth(viewDate, \"subtract\")}\n        >\n          이전달\n        </button>\n        <span className=\"thisMonth\">{viewDate.format(\"MM\")}월</span>\n        <button\n          className=\"next_icon\"\n          onClick={() => changegeMonth(viewDate, \"add\")}\n        >\n          다음달\n        </button>\n      </div>\n      <div className=\"calendar_body\">\n        <div className=\"row week\">\n          <div className=\"box\">\n            <span className=\"text\">일</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">월</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">화</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">수</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">목</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">금</span>\n          </div>\n          <div className=\"box\">\n            <span className=\"text\">토</span>\n          </div>\n        </div>\n        <div>{createCalendar()}</div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Calendar;\n\nconst Container = styled.div`\n  width: 100%;\n  .calendar_header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  .calendar_body {\n    text-align: center;\n    .row {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n      width: 100%;\n    }\n    .row.week {\n      height: 18px;\n      border-bottom: 1px solid #e8e8e8;\n    }\n    .box {\n      width: 32px;\n      height: 32px;\n      margin: 6px 6px;\n      font-size: 14px;\n    }\n    .text {\n      position: static;\n      width: 32px;\n      height: 32px;\n      color: ${theme.textColor};\n    }\n    .holiday,\n    .grayed {\n      color: #484848;\n      pointer-events: none;\n    }\n    .day {\n      position: relative;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 32px;\n      height: 32px;\n    }\n    .selected {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background: pink;\n      font-weight: 700;\n      color: #fff;\n    }\n    .today {\n      border-radius: 50%;\n      font-weight: 500;\n      /* color: pink; */\n      background: pink;\n    }\n    .isSelected {\n      position: relative;\n      color: pink;\n      font-size: 10px;\n      font-weight: 400;\n    }\n    .isToday {\n      position: relative;\n      color: ${theme.textColor};\n      font-size: 10px;\n      font-weight: 400;\n    }\n    .none {\n      display: none;\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport Calendar from \"../Components/Calendar\";\nimport { theme } from \"../theme\";\n\nfunction CalendarScreen() {\n  return (\n    <Container>\n      <Calendar />\n    </Container>\n  );\n}\n\nexport default CalendarScreen;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"../theme\";\n\ninterface ILogin {\n  isLogin: boolean;\n  handleLogin: () => void;\n}\n\nfunction Login({ isLogin, handleLogin }: ILogin) {\n  return (\n    <Container>\n      <TextHeader>\n        <p>Login</p>\n      </TextHeader>\n      <LoginContainer>\n        <button onClick={handleLogin} className=\"social_login_btn google\">\n          google\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn facebook\">\n          facebook\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn naver\">\n          naver\n        </button>\n        <button onClick={handleLogin} className=\"social_login_btn kakao\">\n          kakao\n        </button>\n      </LoginContainer>\n    </Container>\n  );\n}\nexport default Login;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100% - 55px);\n  background-color: ${theme.bgColor};\n  padding-top: 30px;\n`;\n\nconst TextHeader = styled.div`\n  width: calc(100% - 40px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  > p {\n    font-size: 36px;\n    font-weight: 900;\n    margin-right: 10px;\n  }\n`;\n\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  .social_login_btn {\n    width: 300px;\n    height: 48px;\n    border-radius: 8px;\n    margin-bottom: 10px;\n    color: #111;\n  }\n  .social_login_btn.google {\n    background-color: #f4f4f4;\n  }\n  .social_login_btn.facebook {\n    background-color: #4866e4;\n  }\n  .social_login_btn.naver {\n    background-color: #1bb71f;\n  }\n  .social_login_btn.kakao {\n    background-color: #fae300;\n  }\n`;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./assets/fonts/pretendard.css\";\nimport UserMenu from \"./routes/UserMenu\";\nimport Home from \"./routes/Home\";\nimport BottomNav from \"./Components/BottomNav\";\nimport styled from \"styled-components\";\nimport CalendarScreen from \"./routes/CalendarScreen\";\nimport Login from \"./routes/Login\";\nimport { useRecoilState } from \"recoil\";\nimport { loginState } from \"./atoms\";\n\nfunction App() {\n  const [isLogin, setLogin] = useRecoilState(loginState);\n  const handleLogin = () => {\n    setLogin(true);\n  };\n  return (\n    <Container>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route\n            index\n            element={\n              isLogin ? (\n                <Home />\n              ) : (\n                <Login isLogin={isLogin} handleLogin={handleLogin} />\n              )\n            }\n          />\n          <Route\n            path=\"/present-progress-app\"\n            element={\n              isLogin ? (\n                <Home />\n              ) : (\n                <Login isLogin={isLogin} handleLogin={handleLogin} />\n              )\n            }\n          />\n          <Route path=\"/todos/:id\" element={<Home />} />\n          {/* <Route path=\"/add-todos\" element={<Home />} /> */}\n          <Route path=\"/select-date\" element={<CalendarScreen />} />\n          {/* user menu 화면 */}\n          <Route\n            path=\"/user-menu\"\n            element={isLogin ? <Home /> : <UserMenu />}\n          />\n        </Routes>\n        <BottomNav />\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  position: relative;\n  width: 428px;\n  height: 926px;\n  max-width: 428px;\n  max-height: 926px;\n  margin: 0 auto;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { RecoilRoot } from \"recoil\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\nhtml {\n  height: 100%;\n}\n*[hidden] {\n  display: none;\n}\nbody {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  font-family: 'Pretendard', sans-serif;\n  background-color: ${(props) => props.theme.modalColor};\n  color: ${(props) => props.theme.textColor};\n  overflow: hidden;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\nbutton {\n  display: block;\n  border: 0;\n  cursor: pointer;\n  color: inherit;\n  background-color: inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <HelmetProvider>\n          <Helmet>\n            <title>PRESENT PROGRESSIVE</title>\n          </Helmet>\n          <GlobalStyle />\n          <App />\n        </HelmetProvider>\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}